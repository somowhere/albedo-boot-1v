<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>entityForm</name>
    <filePath>src/main/java/${packageName}/${moduleName}/domain/vo/${subModuleName}</filePath>
    <fileName>${ClassName}Vo.java</fileName>
    <content><![CDATA[
/**
 * Copyright &copy; 2018 <a href="https://github.com/somewhereMrli/albedo-boot">albedo-boot</a> All rights reserved.
 */
package ${packageName}.${moduleName}.domain.vo<#if subModuleName != "">.${subModuleName}</#if>;

import com.albedo.java.vo.base.DataEntityVo;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.util.Date;

/**
 * ${functionName}EntityVo ${functionNameSimple}
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Data @ToString @NoArgsConstructor @AllArgsConstructor
public class ${ClassName}Vo extends DataEntityVo {

	private static final long serialVersionUID = 1L;
	<#list table.columnList as column>
		<#if !column.pk && column.isNotBaseField>
	/** F_${column.constantJavaField} ${column.nameAndTitle} */
	public static final String F_${column.constantJavaField} = "${column.simpleJavaField}";
		</#if>
	</#list>

	<@generateFields/>
	<@generateCompositeIdConstructorIfis/>

	@Override
	public boolean equals(Object obj) {
		if(obj instanceof ${ClassName}Vo == false){ return false;}
		if(this == obj) {return true;}
		${ClassName}Vo other = (${ClassName}Vo)obj;
		return new EqualsBuilder()
			.append(getId(),other.getId())
			.isEquals();
	}
}
<#macro generateFields>
	//columns START
	<#list table.columnList as column>
		<#if !column.pk && column.isNotBaseField>
	/** ${column.simpleJavaField} ${column.title} */
	        <#if table.parentExists && table.parentTableFk == column.name>
	private ${table.parent.className} ${column.simpleJavaField};
	        <#elseif column.showType == "userselect" || column.showType == "orgselect" || column.showType == "areaselect">
	private String ${column.simpleJavaField}Id;
	private ${column.simpleJavaType} ${column.simpleJavaField};
	        <#else> ${column.hibernateValidatorExprssion}
	private ${column.simpleJavaType} ${column.simpleJavaField};
			</#if>
		</#if>
	</#list>
	//columns END
</#macro>

<#macro generateCompositeIdConstructorIfis>

	<#if table.compositeId>
	public ${ClassName}Vo(${ClassName}Id id) {
		this.id = id;
	}
	<#else>
	public ${ClassName}Vo(${table.pkJavaType} id) {
		this.id = id;
	}
	</#if>
</#macro>
]]>
    </content>
</template>
