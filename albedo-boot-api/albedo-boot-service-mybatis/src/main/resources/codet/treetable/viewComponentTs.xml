<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>viewComponentTs</name>
    <filePath>src/main/webapp/app/theme/pages/${lastPackageName}/${moduleName}/${subModuleName}/${className}</filePath>
    <fileName>${className}.component.ts</fileName>
    <content><![CDATA[
/**
 * Copyright &copy; 2018 <a href="https://github.com/somewhereMrli/albedo-boot">albedo-boot</a> All rights reserved.
 */
import {AfterViewInit, Component, ViewEncapsulation} from '@angular/core'
import {ScriptLoaderService} from "../../../../../shared/base/service/script-loader.service"
import {CTX, DATA_STATUS} from "../../../../../app.constants"
import {Principal} from "../../../../../auth/_services/principal.service"
import {SessionStorageService} from "ngx-webstorage"
import {${ClassName}} from "./${className}.model"
import {PublicService} from "../../../../../shared/base/service/public.service"

declare let datatable: any
@Component({
    selector: ".sys-${className}-list.page-list",
    templateUrl: "./${className}.component.html",
    encapsulation: ViewEncapsulation.None,
})
export class ${ClassName}Component implements AfterViewInit {

    nodeId: any
    ctx: any
    <#if scheme.modalView>
    ${className}: ${ClassName}
    </#if>
    constructor(
        private _script: ScriptLoaderService,
        private principal: Principal,
        private sessionStorage: SessionStorageService,
        private publicService: PublicService) {
        this.ctx = publicService.getServiceCtx('${permissionPrefix}')
        <#if scheme.modalView>
        this.${className} = new ${ClassName}()</#if>
        this.nodeId = sessionStorage.retrieve("tree_${className}_select_node_id"), this.nodeId = (this.nodeId) ? this.nodeId : 1

    }

    ngAfterViewInit() {
        this.initTable()
    }

    initTable() {
        var thisPrincipal = this.principal,thisCtx =this.ctx
        var options = {

            data: {
                source: {
                    read: {
                        method: 'GET',
                        url: thisCtx + '/${urlPrefix}/',
                    },
                },
                pageSize: 10,
            },
            // columns definition
            columns: [<#assign firstListField = true>
                <#list table.columnList as column>
                <#if column.isList?? && column.isList == 1 && column.simpleJavaField!="parentId" && column.simpleJavaField!="parentIds" && column.simpleJavaField!="parent">
                <#if column.simpleJavaField = 'status'>
                {title: '${column.title}',field:'${column.simpleJavaField}',template: function(row) {
                    return '<span class="m-badge ' + DATA_STATUS[row.status].class + ' m-badge--wide">' + row.status + '</span>';
                }},
                <#else>
                {title: '${column.title}',field:'${column.simpleJavaField}<#if column.simpleJavaType == "User" || column.simpleJavaType == "Org" || column.simpleJavaType == "Area">${column.defaultJavaFieldName?cap_first}</#if>'
                <#if firstListField> ,width: 110,sortable: 'asc',overflow: 'visible',template: function(row) {
                    <#if scheme.modalView>
                        return thisPrincipal.hasAnyAuthorityDirectOne("${permissionPrefix}_edit") ? ( '<a href="javascript:void(0)" class="m-link dialog-edit" title="编辑"\
                            \data-method="get"  data-title="编辑【' + row.name + '】" data-url="' + thisCtx + '/${urlPrefix}/' + row.id + '" data-modal-id="#${className}-edit-modal" title="点击编辑${functionNameSimple}">'+row.${column.simpleJavaField}+'</a>') : row.${column.simpleJavaField};
                    <#else>
                        return thisPrincipal.hasAnyAuthorityDirectOne("${permissionPrefix}_edit") ? ( '<a href="#/${urlPrefix}/form/' + row.id + '" class="m-link" title="点击编辑${functionNameSimple}">'+row.${column.simpleJavaField}+'</a>') : row.${column.simpleJavaField};
                    </#if>
                },<#assign firstListField = false></#if>},
                </#if>
                </#if>
                </#list>
            ],
        }
        if(thisPrincipal.hasAnyAuthorityDirect(["${permissionPrefix}_edit","${permissionPrefix}_lock","${permissionPrefix}_delete"])){
            options.columns.push({
                field: 'Actions',
                width: 110,
                title: '操作',
                sortable: false,
                overflow: 'visible',
                template: function(row) {
                    var template = '';
                    if (thisPrincipal.hasAnyAuthorityDirectOne("${permissionPrefix}_edit"))
                    <#if scheme.modalView>
                        template += '<a href="javascript:void(0)" class="m-portlet__nav-link btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill dialog-edit" title="编辑"\
                            \data-method="get"  data-title="编辑【' + row.name + '】" data-url="' + thisCtx + '/${urlPrefix}/' + row.id + '" data-modal-id="#${className}-edit-modal">\
                            \<i class="la la-edit"></i>\
                            \</a>'
                    <#else>
                        template += '<a href="#/${urlPrefix}/form/' + row.id + '" class="m-portlet__nav-link btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill" title="编辑">\
                            \<i class="la la-edit"></i>\
                            \</a>';
                    </#if>
                    if (thisPrincipal.hasAnyAuthorityDirectOne("${permissionPrefix}_lock"))
                        template += '<a href="javascript:void(0)" class="m-portlet__nav-link btn m-btn m-btn--hover-warning m-btn--icon m-btn--icon-only m-btn--pill confirm" title="' + (row.status == "正常" ? "锁定" : "解锁") + '${functionNameSimple}"\
                     data-table-id="#data-table-${className}" data-method="put"  data-title="你确认要操作选中的${functionNameSimple}吗？" data-url="' + thisCtx + '/${urlPrefix}/' + row.id + '">\
                            \<i class="la la-'+ (row.status == "正常" ? "unlock-alt" : "unlock") + '"></i>\
                            \</a>';
                    if (thisPrincipal.hasAnyAuthorityDirectOne("${permissionPrefix}_delete"))
                        template += '<a  href="javascript:void(0)" class="m-portlet__nav-link btn m-btn m-btn--hover-danger m-btn--icon m-btn--icon-only m-btn--pill confirm" title="删除"\
                               data-table-id="#data-table-${className}" data-method="delete"  data-title="你确认要删除选中的${functionNameSimple}吗？" data-url="' + thisCtx + '/${urlPrefix}/' + row.id + '">\
                            \<i class="la la-trash"></i>\
                            \</a>';
                    return template;
                },
            })
        }
        albedoList.initTable($('#data-table-${className}'), $('#${className}-search-form'), options)
        albedoList.init()


        albedoForm.init()

        <#if scheme.modalView>
        albedoForm.initSave($("#${className}-edit-modal"));
        </#if>
    }

    cancelClickNode${ClassName}(event, treeId, treeNode) {
        // console.log(event)
        albedo.getSessionStorage().store("tree_${className}_select_node_id", '')
        $("#parentId").val('')
        $(".filter-submit-table-${className}").trigger("click")
    }
    clickTreeNode${ClassName}(event, treeId, treeNode) {
        // console.log(event)
        var addUrl = $("#add-${className}").attr("data-url-temp")
        if (addUrl) $("#add-${className}").attr("data-url", addUrl + (addUrl.indexOf("?") == -1 ? "?" : "&") + "parentId=" + treeNode.id)
        this.nodeId = treeNode.id
        albedo.getSessionStorage().store("tree_${className}_select_node_id", this.nodeId)
        $("#parentId").val(treeNode.id)
        $(".filter-submit-table-${className}").trigger("click")
    }

}

]]>
    </content>
</template>
